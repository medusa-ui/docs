"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8968],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2952:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:3},l="Components",u={unversionedId:"internals/components",id:"internals/components",title:"Components",description:"DOM Changes",source:"@site/docs/internals/components.md",sourceDirName:"internals",slug:"/internals/components",permalink:"/documentation/docs/internals/components",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Internal flow of rendering",permalink:"/documentation/docs/internals/medusa-flow"},next:{title:"Hydra flow",permalink:"/documentation/docs/internals/hydra-flow"}},c={},d=[{value:'<a name="dom-changes"></a> DOM Changes',id:"-dom-changes",level:3},{value:'<a name="req-handler"></a> Request handler',id:"-request-handler",level:3},{value:'<a name="session"></a> Session',id:"-session",level:3},{value:'<a name="renderer"></a> Renderer',id:"-renderer",level:3},{value:'<a name="action-handler"></a> Action Handler',id:"-action-handler",level:3},{value:'<a name="diff-engine"></a> Diff Engine',id:"-diff-engine",level:3}],p={toc:d};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"components"},"Components"),(0,o.kt)("h3",{id:"-dom-changes"},(0,o.kt)("a",{name:"dom-changes"})," DOM Changes"),(0,o.kt)("p",null,"io.medusa.medusa.core.domchanges\nTODO"),(0,o.kt)("h3",{id:"-request-handler"},(0,o.kt)("a",{name:"req-handler"})," Request handler"),(0,o.kt)("p",null,"io.getmedusa.medusa.core.router.request"),(0,o.kt)("p",null,"The initial request only resolves if it matches a route set up initially in the RouteSetup class. This is a class that connects the routes loaded during at-startup initialization with a process to handle its rendering."),(0,o.kt)("p",null,"It then proceeds onto the RequestStreamHandler - the goal of which is to trigger the actual response and rendering of HTML.\nThis is one of two implementations of IRequestStreamHandler: The distinction lies between whether an actual Spring Security context is added or not."),(0,o.kt)("p",null,"Regardless, a session is built up and associated with the request. The actual rendering itself is handled by the renderer."),(0,o.kt)("p",null,"TODO"),(0,o.kt)("h3",{id:"-session"},(0,o.kt)("a",{name:"session"})," Session"),(0,o.kt)("p",null,"io.getmedusa.medusa.core.session\nTODO\nContains:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Which template was rendered"),(0,o.kt)("li",{parentName:"ul"},"Which controller was used"),(0,o.kt)("li",{parentName:"ul"},"Last rendered HTML"),(0,o.kt)("li",{parentName:"ul"},"Last used parameters to render"),(0,o.kt)("li",{parentName:"ul"},"Tags: for bi-directionality")),(0,o.kt)("h3",{id:"-renderer"},(0,o.kt)("a",{name:"renderer"})," Renderer"),(0,o.kt)("p",null,"io.getmedusa.medusa.core.render\nTODO"),(0,o.kt)("h3",{id:"-action-handler"},(0,o.kt)("a",{name:"action-handler"})," Action Handler"),(0,o.kt)("p",null,"io.getmedusa.medusa.core.router.action\nTODO"),(0,o.kt)("h3",{id:"-diff-engine"},(0,o.kt)("a",{name:"diff-engine"})," Diff Engine"),(0,o.kt)("p",null,"io.getmedusa.medusa.core.diffengine\nTODO"))}m.isMDXComponent=!0}}]);